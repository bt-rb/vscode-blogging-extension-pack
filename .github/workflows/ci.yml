name: CI
on:
  release:
    types:
      - released
jobs:
  publish:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
          token: ${{ secrets.TOKEN }}
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Prepare build
        id: set-version
        run: |
          VERSION=${{ github.event.release.tag_name }} && VERSION=${VERSION/v/}
          NEXT_VERSION=`echo $VERSION | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.`
          tmp=$(mktemp)
          git config --global user.name 'Andrew Mason'
          git config --global user.email 'andrewmcodes@protonmail.com'
          jq --arg version "${NEXT_VERSION}-SNAPSHOT" '.version = $version' package.json > "$tmp" && mv "$tmp" package.json
          git add package.json
          git commit -m 'auto bump version with release'
          git push
          jq --arg version "$VERSION" '.version = $version' package.json > "$tmp" && mv "$tmp" package.json
          NAME=$(jq -r '.name' package.json)-$VERSION
          echo ::set-output name=name::$NAME
          mkdir dist
          npx vsce package -o $NAME.vsix
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        if: runner.os == 'Linux'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.set-version.outputs.name }}.vsix
          asset_name: ${{ steps.set-version.outputs.name }}.vsix
          asset_content_type: application/zip
      - name: Publish to VSCode Marketplace
        run: |
          [ -n "${{ secrets.BTRB_VSCE_TOKEN }}" ] && \
            npx vsce publish --packagePath ${{ steps.set-version.outputs.name }}.vsix -p ${{ secrets.BTRB_VSCE_TOKEN }} || true
      - name: Publish to Open VSX Registry
        run: |
          [ -n "${{ secrets.BTRB_OVSX_TOKEN }}" ] && \
            npx ovsx publish ${{ steps.set-version.outputs.name }}.vsix --pat ${{ secrets.BTRB_OVSX_TOKEN }} || true
